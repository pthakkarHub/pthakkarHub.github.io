<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Basics on Prashant Thakkar</title>
    <link>/tags/basics/</link>
    <description>Recent content in Basics on Prashant Thakkar</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 30 Dec 2015 13:53:25 +0630</lastBuildDate>
    
	<atom:link href="/tags/basics/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Basics: Types, Variables and Constants</title>
      <link>/post/golang/basics/</link>
      <pubDate>Wed, 30 Dec 2015 13:53:25 +0630</pubDate>
      
      <guid>/post/golang/basics/</guid>
      <description>In today&amp;rsquo;s post we will learn basics of Go language like supported Types, how to declare and initialize variables and constants. Just like any other language, Go has its own way of declaring and initializing variables and constants.
Data Types   Boolean: Used for true and false. Use bool to declare variable of type Boolean.
  Numeric: Go supports unsigned, signed integer, float, complex, byte and rune
   Numeric Types Description      Unsigned integers      uint8 0-255    uint16 0-65535    uint32 0-4294967295    uint64 0-18446744073709551615   Signed integers      int8 -128-127    int16 -32768-32767    int32 -2147483648-2147483647    int64 -9223372036854775808-9223372036854775807    Floating Numbers     float32 32 bit    float64 64 bit   Floating Number with imaginary part      complex64 32 bit    complex128 64 bit   byte Alias to uint8    rune Alias to int32     In addition to above, Go also has uint and int (32 or 64 bit depending on underlying OS) and uintptr (unsigned integer to store uninterrupted bits of pointer value)</description>
    </item>
    
  </channel>
</rss>